% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/qli_values.R
\name{qli_values}
\alias{qli_values}
\title{Calculate quantile residual values for a continuous predictor or fitted values
in a linear model}
\usage{
qli_values(
  mod,
  predictor = "fitted",
  standardise = TRUE,
  lower_quant = 0.025,
  upper_quant = 0.975,
  window_prop = 0.1,
  prop_overlap = 0.75
)
}
\arguments{
\item{mod}{A linear model object fitted with lm()}

\item{predictor}{A character vector. Name of the predictor as it appears in the dataset used for fitting \code{mod}. If predictor is "fitted" (default), fitted values from the \code{mod} are used instead.}

\item{standardise}{If TRUE (default) predictor values and model residuals will be standardised.}

\item{lower_quant}{A quantile to use for the lower boundary of the quantile lowess interval. A numeric value between 0 and 1. Default is 0.025 (recommended).}

\item{upper_quant}{A quantile to use for the upper boundary of the quantile lowess interval. A numeric value between 0 and 1. Default is 0.975 (recommended).}

\item{window_prop}{Proportion of the total sample size use in each rolling window. A numeric value between 0 and 1. Default is 0.10 (recommended).}

\item{prop_overlap}{The extent to which rolling windows can overlap. A numeric value between 0 and 1. Default is 0.75 (recommended).}
}
\value{
A dataframe containing the following columns: \code{x} (predictor or fitted values), \code{q_lower_y_lowess} (residual values for the lower quantile), \code{q_upper_y_lowess} (residual values for the upper quantile), \code{lowess_wide} (width of the quantile lowess interval calculated as the difference between the upper and lower quantile values), \code{predictor_name} (helper column specifying which predictor was used as \code{x}. Useful for visualisations.)
}
\description{
Calculate quantile residual values for a continuous predictor or fitted values
in a linear model
}
\examples{
cars_mod <- lm(dist ~ speed, data = cars)
qli_values(mod = cars_mod, predictor = "speed")
}
